{
    "openapi": "3.0.0",
    "info": {
        "title": "Ugbanawaji API Docs",
        "description": "Ugbanawaji Application Programme Interface(Play Ground)",
        "termsOfService": "This API is subject to terms of services and maybe be changed without service notice.",
        "contact": {
            "name": "Ekenekiso Leonard Ugbanawaji",
            "url": "https://ugbanawaji.com",
            "email": "e.leonard@pensuh.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://www.pensuh.com/public/web/images/logo.png"
        }
    },
    "servers": [
        {
            "url": "https://api.ugbanawaji.com/api/v1",
            "description": "Ugbanawaji API Live Server"
        },
        {
            "url": "http://interview.test/api/v1",
            "description": "Ugbanawaji API Local Server. This server is attached to the local environment."
        },
        {
            "url": "http://interview.test/api/v1"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logs user into system",
                "description": "Attempts to login in the user into the system if the username/password is correct or fails when username/password is not correct",
                "operationId": "AuthenticationController::__invoke",
                "requestBody": {
                    "description": "The user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiLoginRequest"
                            },
                            "example": {
                                "email": "l.ekenekiso@ugbanawaji.com",
                                "password": "password"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "success",
                                    "status": true,
                                    "data": {
                                        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vdmVyaXRlZC50ZXN0L2FwaS92MS9sb2dpbiIsImlhdCI6MTY5NzI3NTMwOSwiZXhwIjoxNjk3Mjc4OTA5LCJuYmYiOjE2OTcyNzUzMDksImp0aSI6IjZBYmN0ZEJUaU9tY1RKemYiLCJzdWIiOiI1MSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjciLCJkYXRhIjp7ImlkIjo1MSwiZmlyc3RuYW1lIjoiQWx2YSIsIm1pZGRsZW5hbWUiOiJQZmVmZmVyIiwibGFzdG5hbWUiOiJDYXNwZXIiLCJ1c2VybmFtZSI6bnVsbCwiYmlvIjoiTW9sZXN0aWFlIGV4IHBlcmZlcmVuZGlzIHBlcnNwaWNpYXRpcyBoaWMgdW5kZS4iLCJpbnRyb2R1Y3Rpb24iOiJQbGFjZWF0IGN1bHBhIGVhIHJlY3VzYW5kYWUgbWFnbmFtIHNlZCB1dC4iLCJleHBlcmllbmNlIjoiRXhlcmNpdGF0aW9uZW0gZHVjaW11cyBkb2xvciBuaWhpbCBxdWlhIGFzcGVybmF0dXIuIiwiaW1hZ2UiOiIvc3RvcmFnZS9pbWFnZXMvMTE2YzI3MDgtZWE5OC00ODNiLWE5ZDAtNmQ4NWNkZWM0YjJkLTIwMjMtMDgtMTQtMTEtNDEtNTUuanBlZyIsInJvbGUiOiJTdHVkZW50Iiwicm9sZXMiOlt7ImlkIjoyLCJuYW1lIjoic3R1ZGVudCIsImxhYmVsIjoiU3R1ZGVudCJ9LHsiaWQiOjY5LCJuYW1lIjoidXQiLCJsYWJlbCI6IlV0In1dfX0.7gYWPr0VVFpBOyYKPO8qjfvEr09p8nwF8it-hGwM8Xk",
                                        "token_type": "bearer",
                                        "expires_in": "3600"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "The authenticated user resources",
                "description": "The authenticated user resources.",
                "operationId": "Api/ProfileController::invoke",
                "responses": {
                    "200": {
                        "description": "The authenticated user resources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "success",
                                    "status": "true",
                                    "data": {
                                        "name": "Ugbanawaji",
                                        "email": "leonard@hardeverse.org",
                                        "id": 24,
                                        "created_at": "2022-09-08T12:29:54.000000Z"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/resumes": {
            "post": {
                "tags": [
                    "Resumes"
                ],
                "summary": "Created user resume with uploaded resume",
                "description": "Created user resume",
                "operationId": "ProfileDocumentController::__invoke",
                "requestBody": {
                    "description": "Created user resume",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResumeRequest"
                            },
                            "example": {
                                "resume": "Ugbanawaji"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The user rehydrated profile record is return with affected fields.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "success",
                                    "status": "true",
                                    "data": {
                                        "education": "s3-public",
                                        "job_experience": [
                                            {
                                                "name": "Harde Business"
                                            }
                                        ],
                                        "skills": [
                                            "PHP",
                                            "Laravel"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Registeration",
                "description": "User Registers here",
                "operationId": "RegisterationController::__invoke",
                "requestBody": {
                    "description": "Create new user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            },
                            "example": {
                                "name": "Ugbanawaji Ekenekiso",
                                "email": "e.ugabanwaji@interview.com",
                                "password": "password",
                                "password_confirmation": "password",
                                "permissions": [
                                    "userprofile_store",
                                    "userprofile_show"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "message": "success.",
                                    "status": true,
                                    "data": {
                                        "firstname": "Ugbanawaji",
                                        "lastname": "Ekenekiso",
                                        "email": "test@verited.com",
                                        "created_at": "2022-09-08T12:29:54.000000Z",
                                        "updated_at": "2022-09-08T12:29:54.000000Z"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiLoginRequest": {
                "properties": {
                    "email": {
                        "description": "The user email",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user password",
                        "type": "string"
                    },
                    "guest_id": {
                        "description": "The user guest ID",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RegistrationRequest": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user email",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user password. combination of letters, numbers, and spacial character.",
                        "type": "string"
                    },
                    "password_confirmation": {
                        "description": "The user password confirmation",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResumeRequest": {
                "properties": {
                    "resume": {
                        "description": "The user resume",
                        "type": "file"
                    }
                },
                "type": "object"
            },
            "UserProfileResource": {
                "properties": {
                    "id": {
                        "description": "The resource id",
                        "type": "integer"
                    },
                    "skills": {
                        "description": "The resource skills",
                        "type": "string"
                    },
                    "job_experience": {
                        "description": "The resource job experience",
                        "type": "string"
                    },
                    "education": {
                        "description": "The resource education",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The resource created date.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "properties": {
                    "id": {
                        "description": "The user id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The user firstname",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user email",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The resource created date.",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "200": {
                "description": "Ok.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Ok.",
                            "errors": []
                        }
                    }
                }
            },
            "201": {
                "description": "Created.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Created.",
                            "errors": []
                        }
                    }
                }
            },
            "202": {
                "description": "Accepted.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Created.",
                            "errors": []
                        }
                    }
                }
            },
            "204": {
                "description": "No Content.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "No Content.",
                            "errors": []
                        }
                    }
                }
            },
            "400": {
                "description": "Bad Request.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Bad Request.",
                            "errors": []
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthenticated.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Unauthenticated.",
                            "errors": []
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Forbidden.",
                            "errors": []
                        }
                    }
                }
            },
            "404": {
                "description": "Resource Not Found.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Resource Not Found.",
                            "errors": []
                        }
                    }
                }
            },
            "413": {
                "description": "Request Entity Too Large.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Request Entity Too Large.",
                            "errors": []
                        }
                    }
                }
            },
            "422": {
                "description": "Unprocessable Entity.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Unprocessable Entity.",
                            "errors": []
                        }
                    }
                }
            },
            "423": {
                "description": "Locked.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Locked.",
                            "errors": []
                        }
                    }
                }
            },
            "500": {
                "description": "Server Error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object"
                        },
                        "example": {
                            "message": "Server Error.",
                            "errors": []
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost:8000/oauth/authorize",
                        "tokenUrl": "http://localhost:8000/api/v1/login",
                        "refreshUrl": "http://localhost:8000/token/refresh",
                        "scopes": []
                    }
                }
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Allow user access to the system"
        },
        {
            "name": "Profiles",
            "description": "The User profile resource collection"
        }
    ]
}